dependencies {
    api "com.google.code.gson:gson:${gson_version}"
    api "net.java.dev.jna:jna:${jna_version}"
    api "org.apache.commons:commons-compress:${commons_compress_version}"
    api "org.slf4j:slf4j-api:${slf4j_version}"

    testImplementation("org.testng:testng:${testng_version}") {
        exclude group: "junit", module: "junit"
    }
    testImplementation "org.slf4j:slf4j-simple:${slf4j_version}"
    testRuntimeOnly project(":engines:pytorch:pytorch-model-zoo")
    testRuntimeOnly project(":engines:pytorch:pytorch-jni")
}

compileJava.dependsOn(processResources)

processResources {
    outputs.file file("${project.buildDir}/classes/java/main/ai/djl/engine/api.properties")
    doFirst {
        def classesDir = file("${project.buildDir}/classes/java/main/ai/djl/engine/")
        classesDir.mkdirs()
        def propFile = new File(classesDir, "api.properties");
        propFile.text = "djl_version=${project.version}"
    }
}

javadoc {
    title "Deep Java Library ${project.version} API specification"
    exclude "ai/djl/util/**"
    exclude "ai/djl/ndarray/internal/**"
}

jar {
    manifest {
        attributes(
                "Notice": "DJL will collect telemetry to help us better understand our usersâ€™" +
                        " needs, diagnose issues, and deliver additional features. If you would" +
                        " like to learn more or opt-out please go to: " +
                        "https://docs.djl.ai/docs/telemetry.html for more information."
        )
    }
}
